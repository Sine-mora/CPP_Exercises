#include "task1.h"
#include <iostream>
#include <sstream>

enum EOption : int
{
    ePrintN = 1,
    ePrintAB,
    ePrintABx,
    eShowPrice4,
    eShowPrice5,
    eShowPrice6,
    eSumAB,
    eMultiplyAB,
    eSqrtAB,
    eSumN,
    eSum2N,
    eSumFactorialFl,
    eSumSignChange, // 13
    ePowerAN,
    eNone
};

int main()
{
    Task1 task1;

    int eOption = eNone;

    bool isLooping = true;
    while (isLooping)
    {
        std::cout << "--------------------\n";
        std::cout << "\nSelect 1-23 or something else to exit, idk\n";
        std::cin >> eOption;

        switch (eOption)
        {
        case ePrintN:
            task1.PrintN();
            break;
        case ePrintAB:
            task1.PrintAB();
            break;
        case ePrintABx:
            task1.PrintABx();
            break;
        case eShowPrice4:
            task1.ShowPrice(4);
            break;
        case eShowPrice5:
            task1.ShowPrice(5);
            break;
        case eShowPrice6:
            task1.ShowPrice(6);
            break;
        case 7:
            task1.SumAB();
            break;
        case 8:
            task1.MultiplyAB();
            break;
        case 9:
            task1.CalcSquareAB();
            break;
        case 10:
            task1.SumN();
            break;
        case 11:
            task1.Sum2N();
            break;
        case 12:
            task1.MultiplicationN();
            break;
        case 13:
            task1.SumSignChange();
            break;
        case 14:
            task1.PowerOfAN();
            break;
        case 15:
            task1.SubtractFromAB();
            break;
        case 16:
            std::cout << "Task invalid. Equal to task 6.\n";
            break;
        case 17:
            std::cout << "Task invalid. Equal to task 9.\n";
            break;
        case 18:
            std::cout << "Task invalid. Equal to task 10.\n";
            break;
        case 19:
            task1.CheckForPower();
            break;
        case 20:
            task1.FindBiggestNum();
            break;
        case 21:
            task1.FindSmallestNum();
            break;
        case 22:
            task1.Bank();
            break;
        case 23:
            task1.Skier();
            break;
        default:
            isLooping = false;
            break;
        }
    }
    std::cout << "Exiting..\n";
    return 0;
}

/*
 Цикли :
1. Дадени са цели числа K и N (N > 0). Изведете N пъти числото К.
2. Дадени са две цели числа A и B (A < B). Изведете във възходящ ред всички цели числа,
разположени между A и B (вкючително самите числа A и B), а после и количеството N на
тези числа.
3. Дадени са две цели числа A и B (A < B). Изведете във възходящ ред всички цели числа,
разположени между A и B (не вскючвайте числата A и B), а после и количеството N на
тези числа.
4. Дадено е естествено число – цена за 1 кг бонбони. Изведете цената на 1, 2, …, 10 кг
бонбони.
5. Дадено е естествено число – цена за 1 кг бонбони. Изведете цената на 0.1, 0.2, …, 1 кг
бонбони.
6. Дадено е естествено число – цена за 1 кг бонбони. Изведете цената на 1.2, 1.4, …, 2 кг
бонбони.
7. Дадени са две цели числа A и B (A < B). Намерете сумата на всички цели числа от А до В
включително.
8. Дадени са две цели числа A и B (A < B). Намерете произведението на всички цели числа
от А до В включително.
9. Дадени са две цели числа A и B (A < B). Намерете квадрата на всички цели числа от А до
В включително.
10. Дадено е цяло число N (> 0). Намерете сума от 1 + 1/2 + 1/3 + … + 1/N (реални числа)
11. Дадено е число N (> 0). Намерете сума N на 2 + (N + 1) на 2 + (N + 2) на 2 + … + (2*N)
на 2
(цяло число).
12. Дадено е цяло число N (> 0). Намерете произведението 1.1 * 1.2 * 1.3 * … (N
умножения).
13. Дадено е цало число N (> 0). Намерете стойността на израза 1.1 – 1.2 + 1.3 – …(N смяни
на значението на знака).
14. Дадено е реално число А и цяло число N(> 0). Използвайки един цикъл, изведете
всички цели степени на числата А от 1 до N.
15. Дадени са цели положителни числа А и В (А < В). Изведете всички цели числа между А
и В включително като всяко число трябва да се изведе толкова пъти колкото е стойността
му.
16. Дадени са две цели числа A и B (A < B). Намерете произведението на всички цели
числа от А до В включително.
17. Дадени са две цели числа A и B (A < B). Намерете квадрата на всички цели числа от А
до В включително.
18. Дадено е цяло число N (> 0). Намерете сума от 1 + 1/2 + 1/3 + … + 1/N
(реални числа)
19. Дадено е цяло число N(> 0). Ако едно то се явява степен на числото 3, изведете True,
ако ли не – изведете False.
20. Дадено е цяло число N(> 0). Намерете най-голямото цяло число К, квадрата на който
не надвишава N: K на 2 ? N.
21. Дадено е цяло число N(> 1). Намерете най-малкото цяло число К, за което е вярно не
равенството 3 на K > N.
22. Началния влог в банка е равен на 100 лева. След всеки месец размера на влога се
увеличава с Р процента от съществуващата сума(Р-реално число, 0 < P< 25). По данните за
Р определете след колко месеца размера на влога ще надвиши 1100 лева, и иведете
намереното количество месеци К(цяло число) и крайния размер на влога S(цяло число).
23. Скиор започнал тренировки, пробягал първия ден 10 км. Всеки следващ ден той
увеличавал пробега с Р процента от пробера на предишния ден(Р-естествено число, 0 < P<
50). По данни Р се опредете, след колко дни сумарния пробег на скиора за всички дни ше
стане 200 км, и изведете намереното количество дни К(цяло) и сумарния пробег S(реално
число).
*/
